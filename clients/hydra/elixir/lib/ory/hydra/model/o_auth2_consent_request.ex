# NOTE: This file is auto generated by OpenAPI Generator 6.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Ory.Hydra.Model.OAuth2ConsentRequest do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :acr,
    :amr,
    :challenge,
    :client,
    :context,
    :login_challenge,
    :login_session_id,
    :oidc_context,
    :request_url,
    :requested_access_token_audience,
    :requested_scope,
    :skip,
    :subject
  ]

  @type t :: %__MODULE__{
    :acr => String.t | nil,
    :amr => [String.t] | nil,
    :challenge => String.t,
    :client => Ory.Hydra.Model.OAuth2Client.t | nil,
    :context => any() | nil,
    :login_challenge => String.t | nil,
    :login_session_id => String.t | nil,
    :oidc_context => Ory.Hydra.Model.OAuth2ConsentRequestOpenIdConnectContext.t | nil,
    :request_url => String.t | nil,
    :requested_access_token_audience => [String.t] | nil,
    :requested_scope => [String.t] | nil,
    :skip => boolean() | nil,
    :subject => String.t | nil
  }
end

defimpl Poison.Decoder, for: Ory.Hydra.Model.OAuth2ConsentRequest do
  import Ory.Hydra.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:client, :struct, Ory.Hydra.Model.OAuth2Client, options)
    |> deserialize(:context, :any, :any, options)
    |> deserialize(:oidc_context, :struct, Ory.Hydra.Model.OAuth2ConsentRequestOpenIdConnectContext, options)
  end
end

